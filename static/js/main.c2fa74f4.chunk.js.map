{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","previousState","deleteGood","filter","item","clearSelection","displaySelectedGoods","length","slice","join","this","className","map","isSelected","find","classNames","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,I,EAGjBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACC,GACb,MAAO,CACLJ,cAAc,GAAD,mBAAMI,EAAcJ,eAApB,CAAmCE,S,EAKtDG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GACb,MAAO,CACLJ,cAAeI,EAAcJ,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASL,U,EAKzEM,eAAiB,WACf,EAAKL,SACH,CAAEH,cAAe,M,EAIrBS,qBAAuB,WACrB,IAAQT,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUV,EAAc,GAAxB,gBAEF,QACE,MAAM,GAAN,OAAUA,EAAcW,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDZ,EAAcW,OAAO,GAA5E,mB,4CAIN,WAAU,IAAD,OACCX,EAAkBa,KAAKd,MAAvBC,cAER,OACE,sBAAKc,UAAU,MAAf,UACE,6BAAKD,KAAKJ,yBACV,6BACGZ,EAAgBkB,KAAI,SAACb,GACpB,IAAMc,EAAahB,EAAciB,MAAK,SAAAV,GAAI,OAAIA,IAASL,KAEvD,OACE,qBAEEY,UAAWI,IAAW,YACpB,CAAE,sBAAuBF,IAH7B,UAKGd,EACD,wBACEiB,KAAK,SACLL,UAAU,kCACVM,QAASpB,EAAciB,MAAK,SAAAV,GAAI,OAAIA,IAASL,KACzC,kBAAM,EAAKG,WAAWH,IACtB,kBAAM,EAAKD,QAAQC,IALzB,SAOGc,EACG,SACA,UAdDd,QAoBZF,EAAcU,OAAS,GACtB,wBACES,KAAK,SACLL,UAAU,iCACVM,QAASP,KAAKL,eAHhB,oC,GA3EQa,IAAMC,WAwFTxB,IC1GfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c2fa74f4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  addGood = (good: string) => {\n    this.setState((previousState) => {\n      return {\n        selectedGoods: [...previousState.selectedGoods, good],\n      };\n    });\n  };\n\n  deleteGood = (good: string) => {\n    this.setState((previousState) => {\n      return {\n        selectedGoods: previousState.selectedGoods.filter(item => item !== good),\n      };\n    });\n  };\n\n  clearSelection = () => {\n    this.setState(\n      { selectedGoods: [] },\n    );\n  };\n\n  displaySelectedGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{this.displaySelectedGoods()}</h1>\n        <ul>\n          {goodsFromServer.map((good) => {\n            const isSelected = selectedGoods.find(item => item === good);\n\n            return (\n              <li\n                key={good}\n                className={classNames('App__good',\n                  { 'App__good--selected': isSelected })}\n              >\n                {good}\n                <button\n                  type=\"button\"\n                  className=\"App__button App__button--select\"\n                  onClick={selectedGoods.find(item => item === good)\n                    ? () => this.deleteGood(good)\n                    : () => this.addGood(good)}\n                >\n                  {isSelected\n                    ? 'Remove'\n                    : 'Add'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n        {selectedGoods.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"App__button App__button--clear\"\n            onClick={this.clearSelection}\n          >\n            Clear selection\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}