{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","previousState","deleteGood","filter","item","clearSelection","this","className","join","map","classNames","find","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,I,EAGjBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACC,GACb,MAAO,CACLJ,cAAc,GAAD,mBAAMI,EAAcJ,eAApB,CAAmCE,S,EAKtDG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GACb,MAAO,CACLJ,cAAeI,EAAcJ,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASL,U,EAKzEM,eAAiB,WACf,EAAKL,SACH,CAAEH,cAAe,M,4CAIrB,WAAU,IAAD,OACCA,EAAkBS,KAAKV,MAAvBC,cAER,OACE,sBAAKU,UAAU,MAAf,UACE,sDAAuBV,EAAcW,KAAK,SAC1C,6BACGd,EAAgBe,KAAI,SAACV,GAAD,OACnB,qBAEEQ,UAAWG,IAAW,YACpB,CAAE,sBAAuBb,EAAcc,MAAK,SAAAP,GAAI,OAAIA,IAASL,OAHjE,UAKGA,EACD,wBACEa,KAAK,SACLL,UAAU,kCACVM,QAAShB,EAAcc,MAAK,SAAAP,GAAI,OAAIA,IAASL,KACzC,kBAAM,EAAKG,WAAWH,IACtB,kBAAM,EAAKD,QAAQC,IALzB,SAOGF,EAAcc,MAAK,SAAAP,GAAI,OAAIA,IAASL,KACjC,SACA,UAdDA,QAmBVF,GACC,wBACEe,KAAK,SACLL,UAAU,iCACVM,QAASP,KAAKD,eAHhB,oC,GAxDQS,IAAMC,WAqETpB,ICvFfqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3ba52f04.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  addGood = (good: string) => {\n    this.setState((previousState) => {\n      return {\n        selectedGoods: [...previousState.selectedGoods, good],\n      };\n    });\n  };\n\n  deleteGood = (good: string) => {\n    this.setState((previousState) => {\n      return {\n        selectedGoods: previousState.selectedGoods.filter(item => item !== good),\n      };\n    });\n  };\n\n  clearSelection = () => {\n    this.setState(\n      { selectedGoods: [] },\n    );\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{`Selected good: ${selectedGoods.join(', ')}`}</h1>\n        <ul>\n          {goodsFromServer.map((good) => (\n            <li\n              key={good}\n              className={classNames('App__good',\n                { 'App__good--selected': selectedGoods.find(item => item === good) })}\n            >\n              {good}\n              <button\n                type=\"button\"\n                className=\"App__button App__button--select\"\n                onClick={selectedGoods.find(item => item === good)\n                  ? () => this.deleteGood(good)\n                  : () => this.addGood(good)}\n              >\n                {selectedGoods.find(item => item === good)\n                  ? 'Remove'\n                  : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n        {selectedGoods && (\n          <button\n            type=\"button\"\n            className=\"App__button App__button--clear\"\n            onClick={this.clearSelection}\n          >\n            Clear selection\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}